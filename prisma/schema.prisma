// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  name      String
  password  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  accounts  Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
model JenisProduk {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model KategoriUmur {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Product {
  id         Int      @id @default(autoincrement())
  barcode    String   @unique
  nama       String
  jenisId    Int
  kategoriId Int
  ukuran     String
  hargaJual  Decimal
  hargaBeli  Decimal
  stok       Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  jenis        JenisProduk  @relation(fields: [jenisId], references: [id])
  kategoriUmur KategoriUmur @relation(fields: [kategoriId], references: [id])
  transaksi    Transaksi[]
}

model Transaksi {
  id          Int      @id @default(autoincrement())
  productId   Int
  jumlah      Int
  hargaSatuan Decimal
  diskon      Decimal
  date        DateTime @default(now())

  product Product @relation(fields: [productId], references: [id])
}

model Expense {
  id          Int      @id @default(autoincrement())
  name        String
  jumlah      Int
  hargaSatuan Decimal
  totalHarga  Decimal
  keterangan  String?
  date        DateTime @default(now())
}

model ReportDaily {
  id                     Int      @id @default(autoincrement())
  total_item_transaction Int
  total_uang_transaction Decimal
  total_uang_kasir       Decimal
  date                   DateTime @default(now())
}
